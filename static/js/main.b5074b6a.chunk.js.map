{"version":3,"sources":["Components/Square.js","Patterns.js","App.js","reportWebVitals.js","index.js"],"names":["Square","val","chooseSquare","className","onClick","Patterns","App","useState","board","setBoard","player","setPlayer","winner","status","result","setResult","useEffect","checkWinner","checkIfTie","alert","restartGame","square","map","idx","forEach","currPattern","firstPlayer","foundWinningPattern","filled","href","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5074b6a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\n\nfunction Square({ val, chooseSquare }) {\n  return (\n    <div className=\"square\" onClick={chooseSquare}>\n      {val}\n    </div>\n  );\n}\n\nexport default Square;\n","export const Patterns = [\n  // Horizontal\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n\n  // Vertical\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n\n  // Diagonal\n  [0, 4, 8],\n  [2, 4, 6],\n];\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport Square from \"./Components/Square\";\nimport { Patterns } from \"./Patterns\";\n\nfunction App() {\n  const [board, setBoard] = useState([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\n  const [player, setPlayer] = useState(\"O\");\n  const [result, setResult] = useState({ winner: \"none\", status: \"none\" });\n\n  useEffect(() => {\n    checkWinner();\n    checkIfTie();\n\n    if (player == \"X\") {\n      setPlayer(\"O\");\n    } else {\n      setPlayer(\"X\");\n    }\n  }, [board]);\n\n  useEffect(() => {\n    if (result.status != \"none\") {\n      alert(`Game Finished! Winning Player: ${result.winner}`);\n      restartGame();\n    }\n  }, [result]);\n\n  const chooseSquare = (square) => {\n    setBoard(\n      board.map((val, idx) => {\n        if (square == idx && val == \"\") {\n          return player;\n        }\n\n        return val;\n      })\n    );\n  };\n\n  const checkWinner = () => {\n    Patterns.forEach((currPattern) => {\n      const firstPlayer = board[currPattern[0]];\n      if (firstPlayer == \"\") return;\n\n      let foundWinningPattern = true;\n\n      currPattern.forEach((idx) => {\n        if (board[idx] != firstPlayer) {\n          foundWinningPattern = false;\n        }\n      });\n\n      if (foundWinningPattern == true) {\n        setResult({ winner: player, status: \"won\" });\n      }\n    });\n  };\n\n  const checkIfTie = () => {\n    let filled = true;\n\n    board.forEach((square) => {\n      if (square == \"\") {\n        filled = false;\n      }\n    });\n\n    if (filled) {\n      setResult({ winner: \"No One.\", status: \"tie\" });\n    }\n  };\n\n  const restartGame = () => {\n    setBoard([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\n    setPlayer(\"O\");\n  };\n\n  return (\n    <div>\n      <h1 className=\"title\">TicTacToe Game in ReactJs</h1>\n      <div className=\"playerStatus\">Player to play: {player}</div>\n      <div className=\"App\">\n        <div className=\"board\">\n          <div className=\"row\">\n            <Square\n              val={board[0]}\n              chooseSquare={() => {\n                chooseSquare(0);\n              }}\n            />\n            <Square\n              val={board[1]}\n              chooseSquare={() => {\n                chooseSquare(1);\n              }}\n            />\n            <Square\n              val={board[2]}\n              chooseSquare={() => {\n                chooseSquare(2);\n              }}\n            />\n          </div>\n\n          <div className=\"row\">\n            <Square\n              val={board[3]}\n              chooseSquare={() => {\n                chooseSquare(3);\n              }}\n            />\n            <Square\n              val={board[4]}\n              chooseSquare={() => {\n                chooseSquare(4);\n              }}\n            />\n            <Square\n              val={board[5]}\n              chooseSquare={() => {\n                chooseSquare(5);\n              }}\n            />\n          </div>\n\n          <div className=\"row\">\n            <Square\n              val={board[6]}\n              chooseSquare={() => {\n                chooseSquare(6);\n              }}\n            />\n            <Square\n              val={board[7]}\n              chooseSquare={() => {\n                chooseSquare(7);\n              }}\n            />\n            <Square\n              val={board[8]}\n              chooseSquare={() => {\n                chooseSquare(8);\n              }}\n            />\n          </div>\n        </div>\n      </div>\n\n      <div className=\"flexCenter\">\n        <a\n          href=\"https://github.com/MehulBawadia/react-tic-tac-toe\"\n          target=\"_blank\"\n          className=\"linkViewSource\"\n        >\n          Click here to view the source code\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}